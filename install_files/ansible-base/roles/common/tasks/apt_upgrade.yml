---
# Update the apt cache as a discrete action, since we will conditionally
# hold the `tor` package if it's slated for upgrade. Since production
# instances use SSH over Tor, an upgrade to the tor package will break
# the SSH connection and halt execution of the playbook.
- name: Update apt cache.
  apt:
    update_cache: yes
    cache_valid_time: 3600
  tags:
    - apt

- name: Check whether tor will be upgraded.
  command: aptitude search '~U' --display-format '%p' --disable-columns
  register: tor_upgradable_result
  changed_when: false

- name: Hold tor package to prevent upgrade breaking SSH connection.
  command: aptitude hold tor
  register: tor_hold_package_result
  when:
    - "'tor' in tor_upgradable_result.stdout_lines"
    # We only want to prevent upgrades if we're connected over Tor; first-time
    # installs will happen over direct access SSH (to local IPv4 address).
    # If we're connecting to an Onion URL, then it's over Tor.
    - (ansible_host|default(ansible_ssh_host)).endswith('.onion')

- name: Perform safe upgrade to ensure all the packages are updated.
  apt:
    upgrade: safe
  tags:
    - apt
    - apt-upgrade

- name: Remove hold on tor package, to permit automatic upgrades.
  command: aptitude unhold tor
  # Report changed status if we marked the package as held previously.
  # Not using a conditional `when` to control task execution because
  # we want to ensure the hold is removed, otherwise nightly upgrades
  # will not install security patches.
  changed_when: tor_hold_package_result|changed

- name: Check if reboot is required due to security updates.
  stat:
    path: /var/run/reboot-required
  register: reboot_required
  # Task is read-only, so don't mark changed.
  changed_when: false
  tags:
    - reboot

- name: Reboot if required due to security updates.
  command: reboot
  when: reboot_required.stat.exists
  tags:
    - reboot

- name: Wait for server to come back.
  local_action: wait_for
  args:
    host: "{{ ansible_ssh_host|default(inventory_hostname) }}"
    port: "{{ ansible_ssh_port|default(ansible_port|default(22)) }}"
    delay: 20
    search_regex: OpenSSH
    state: started
  when: reboot_required.stat.exists
  # Wait action runs on localhost, and does NOT require sudo.
  sudo: false
  tags:
    - reboot
